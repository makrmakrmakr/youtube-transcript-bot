- English (Canada)

- Generated by YouTube: True

Hello everybody and welcome back.
So I'm going to start this
video by wishing that all of you
are safe and healthy and 
that you're doing okay during these
tough times.
Now, I know that a lot is happening
right now day by day
things are changing and
I'm sure that you guys are being
affected by the coronavirus
and all of the things that are
happening in the world right now.
What I want to encourage you to do
in this video is to try
to see some light in the situation
and take advantage as
much as possible of the spare time
that you're going to be
given or that you're going to
have in the next weeks and months
and that's why what I'm going to do here is share with you.
My top five programming projects that you can work on
while you're quarantined or while you're isolated.
Now these projects going to be a
little bit different than
some of the ones I've mentioned in previous videos because
I'm going to assume that you're going
to have a lot of time
to work on these.
So I'm going to suggest some
bigger and more impressive projects
that are going to look great on a resume, build your skills
and allow you to learn new tools and technologies.
So we'll get into that in just a second just a quick word
from our sponsor.
I need to thank simply learn
for sponsoring this video and
giving you all a discount on
their data science Master's
course that's been co-developed with IBM,
this course is comprised
of six full courses covering
key Technologies like R, SAS
Python, Tableau, Hadoop and Spark
while working through this
course, you'll develop 15
real life projects and master over
30 in-demand skills.
You'll work with Advanced Analytics tools such as Pandas,
use data collection tools like
Apache Hbase and learn ETL
tools like Hive, Pig and Scoop
by purchasing this course you
have lifetime access to all of the
course content and lectures
receive 1200 USD worth of
IBM Cloud Credits and have access
to the IBM cloud.
Cloud platforms like IBM Watson
for 24/7 practice, upon completion
you will receive certificates from
IBM and simply learn to testify
to your skills as an expert in data science.
Click the link in the description to get started.
So the first type of project that I like to recommend to
everyone is something that has to do with web development.
Now, this can be simple.
This can be complex.
But what I usually recommend for
atleast beginning is to
pick some kind of application that
you've already built and
try to recreate that in a web-based version.
So maybe you have like a text based sorting algorithm.
or maybe you have a text based inventory system or
maybe you even already built a
graphical user interface,
but it's for a specific operating system,
or maybe it's even
an iPhone app or something like that.
Try to take that and convert that
into a web based application.
Now this is going to mean that
you don't have to write nearly
as much code as if you were doing
this project from scratch
and you already have something to
kind of base your project of.
So what this is going to allow you to do is kind
of skip all the grunt work with
getting all this back-end
stuff functioning and just focus on learning.
How web development actually works
and how you can serve these
kind of applications on the web.
Now, obviously this is going to
involve the use of HTML and CSS.
Although I'm pretty sure from atleast
talking to a lot of
different programmers.
Most people have a basic knowledge of this
and if you don't
it's going to be pretty easy to pick that up.
So some frameworks that I like to
recommend at least to get
started with web development.
If you know anything about Python is Flask.
Now Flask is a really simple
and great web framework for doing
applications like I just described
something that's a few different pages.
It's not crazy complex.
Maybe, you have a database but you don't
need to and just really
easy to get set up.
Again, it's a python back-end web framework.
Then from there.
All you need to do is pick what you want
to use for the front end.
So with flask it's way easier
just to use custom HTML
and CSS and your own JavaScript.
But if you don't want to style the
web page yourself, you
can always use a framework like Bootstrap.
Now Bootstrap is a really easy to use CSS framework.
Essentially, it allows you to use
some built-in classes.
It allows you to do some animations
and you can make a really good.
Good-looking website without having much knowledge
of HTML and CSS.
And personally what I always do is
I set up my python back-end
the Flask back-end which is
really easy to get set up and
then I style the entire front-end
using Bootstrap and Bootstrap
is a really great website that
has a ton of different examples
of all of the classes that they
have in the different usages.
So it's really easy to create
anything that you want.
So that's my project idea
number one, takes some application
you've already created and turn it into a web based app.
Obviously, there's so many different ways to do this.
Let me know if you have any Frameworks that you think are
better for this but anyone who knows Python,
I always recommend
Flask you want something a bit more complex.
You can go with Django and these are great Frameworks.
They're fairly easy to learn and once you learn them it's
going to allow you to do so many different things.
So my second project idea is to implement 
some popular algorithms.
Now, I know this is quite vague and
I'm not giving you any
real examples, although I will later
but this is a really
great way to show people that not only
do you know how to program.
Can you create a project but you can also implement
algorithms and you know a bit
about algorithms and data structures.
And this looks really good on a resume where you
have a project that's impressive
on its own but also implements
a popular algorithm that shows yes,
you understand how this
algorithm works and you were 
good enough to actually go in
and implement that yourself,
now this isn't really that difficult.
There's tons of explanations online on
how these algorithms works
and I guarantee you'll learn a ton as you actually go
through and try to program it yourself.
So some examples of this or something
like a path finding algorithm.
So maybe you make a web interface or maybe you
make some kind of interface where a
user can pick a start point
and an end point and then the
algorithm runs and it finds
the shortest path between these two points.
That's a great example of
something that I've personally
done that I think looks really good on a resume.
Another example of implementing
a popular algorithm is something like stable matching.
Now many people don't know what stable matching is
but let's say we have a bunch of employers and we have
a bunch of students,
the employers rank the students based
on who they want to hire and
the students rank the employers
based on who they want to work for.
Well given that information.
How can we find the best possible match
for all of the employers
and for all of the students,
so that each person gets their top choice,
you know within reason, right?
gets the best possible choice
that they can have.
This is a really interesting problem and
that's called stable matching
and that's another example of
something that you can implement.
So pick kind of any real world problem, anything you want
pick an algorithm that you want to try
to implement and then
try to tie it into a project and
that's a great way to showcase
your skills and have a really nice
resume project and something
to talk about in potential interviews.
So my next project idea is aimed
towards those of you that
really like hardware and a little bit
more hands on, what I'm going
to recommend for you guys is to do
something where you interface
with a micro-controller.
So obviously, you know little
micro-controllers like this
you can program to do all kinds of crazy things.
So a project I've actually done with
this is a live security system.
So what I actually did was hooked up a little USB
camera to this device and this is a Nvidia Jetson Nano,
by the way, it's a little bit on
the higher end when it comes
to micro-controllers and I ran a
facial detection and recognition
script on this.
So when you walk near the camera,
it would pick up who you are
and it would track and
log which person was in which
room at what time. 
Now with that kind of information
you can do whatever you want.
You can create some kind of charts,
so you can create graphs,
you can make a website to show that information.
But what I mean to say here is that if you can interface
with a little piece of Hardware,
you can maybe have some
kind of sensor on it.
You can do something interesting with it
maybe even just
pressing a button then you can have some really cool software
in the background that takes all the
information that you
get from this micro-controller and
does something really cool with it.
And again the examples I usually like to use or something
like, you know Motion Detection
you could do the Facial Detection
and recognition script and
you don't need to buy something
like this, which is called the Jets and Nano.
It's actually a Nvidia product which has a GPU on it.
That's why it's got that heat sink in the fan there.
You get something like a Raspberry Pi,
you can get an Arduino.
There's all kinds of cheaper micro-controllers that are only
like 15 or 20 bucks.
If you can afford that in times like this that are a lot
of fun and you can do a lot of cool stuff with them and they
actually have all these pins on the side which are called
GPIO pins and what those allow you to do is actually control
the voltage that goes to those pins
from the micro-controller.
So say you want to set up,
you know a little circuit to it.
You want to create a little more,
more intricate kind of program
or project.
I'm sure some of you know a lot more about electronics than
I do, then you can do that with
the board like this and it
really opens up the possibilities
for the kind of projects
you can create, especially,
if you like to see how they're
working and see them kind of running,
you know in the actual
physical world as opposed to
just on your computer screen.
A lot of people make robots with these things, you know,
the possibilities are endless
Google best Raspberry Pi Projects.
Something like that and you'll find an
entire list of amazing things
to work on.
So my fourth project idea is to implement a machine learning
and artificial intelligence model
into some kind of project.
Now, I'll give you a few examples near
the end of this section,
but just hear me out here.
So if you don't know much about
machine learning, obviously
that's going to be the first step,
is learning a bit about
machine learning picking something
that you think is interesting
and then picking a project that you can apply that to.
Now, for any of you that are
getting started and you want to figure
out well, how can I even get a
machine learning model up
and running?
I personally have a
ton of different tutorials on
how to do that but a great
resource in a website to go to is
actually the TensorFlow website.
So TensorFlow is a very popular machine learning
and AI framework, it's usually used
with Python other than
you do have a JavaScript framework as well.
And I believe they might have one for Java and some other
languages too.
But what it does on the website there is it has a ton of
awesome guides and tutorials that
walk you through almost
an entire project that has to deal
with machine learning
and AI, so what this is going
to do for you is show you exactly
how to get this model set up
how to train the model, how it works,
but I will warn you that is a
little bit vague on some of
the explanations.
So what I usually like to do is
I go to the website I copy
down all the code make sure that this thing is working and
then I go back and I try to understand how each individual
component is working and
look up some things on the side
watch some videos and figure out how this actually works
some examples of some things that
I've done in terms of integrating
are implementing models into projects is something with the
MNIST digits data set, when I actually did is I made a
Pygame interface in Python.
That allowed you to draw a digit
with the mouse like a 0
or 701 whatever you want to draw and
then you would feed
that pixel data to my machine learning model,
which I pretty
much had just copied exactly
from the TensorFlow website,
then it would spit out and tell me
what number it's thought
that I drew and this was actually pretty accurate.
It worked pretty well.
It was my first experience actually
implementing this into
a project and the reason this is great is because it's some
tangible thing that you can actually use to interface with
your model.
It makes it a little bit more interesting than just having
this text based accuracy score that
you see in so many different
tutorials and guides and
it's just a really great thing to
be like, yeah, not only do.
I know how this works.
I can implement it and
I can integrate it into some kind of project.
Alright, so the last project that
I recommend to everyone
and probably my personal favorite
to work on is recreating
an Atari game.
Now, the reason I say Atari
is because these are typically
easier kind of pixel based games
that most people can figure
out how to make and there's
so many resources online atleast
for the texture packs for them for some of the graphics.
And just is really easy to make,
like, you know a version
of Tetris or Snake these simple kind
of games that still
do teach you a lot about programming and
are always fun and
interesting to recreate.
So that is my last project idea for you.
You know, if you're working in Python,
you can use something
like Pygame.
Maybe this is a good opportunity
to explore something like Unity.
So Unity is actually where you can make 3-D games and
I know there's a ton of videos online and tutorials from
Unity themself on how to do that.
Maybe you want to explore something like
Augmented Reality.
I know you can do that in unity as well and
it's just a great
opportunity to you know mess around make some fun games
and play them and share them with your friends or family
or whoever you may be isolated or quarantine with.
So those have been my five programming projects to work on
while you're quarantined. 
Now again, guys, I know these times are tough.
I know a lot of you are upset.
I know a lot of things in that are
horrible are going around
in the world.
Yet, that doesn't mean we can't
take advantage of the spare time
that we have.
I see far too often that people get very upset.
They get very sad.
They sit on the couch they want and watch
Netflix all day,
although that's reasonable.
It makes sense to me.
I think that if we can take advantage and
try to see the
positives in these times, we're only
going to come out better
from them.
And that's what I encourage you all to do.
So, anyways, that has been this video. 
If you guys enjoyed
make sure you leave a like and subscribe
to the channel and as
always leave some other video ideas
that you'd like to see
in the comments down below.

- English (auto-generated)

- Generated by YouTube: True

hello everybody and welcome back so I'm
gonna start this video by wishing that
all of you are safe and healthy and that
you're doing okay during these tough
times now I know that a lot is happening
right now
day by day things are changing and I'm
sure that you guys are being affected by
the corona virus and all of the things
that are happening in the world right
now what I want to encourage you to do
in this video is to try to see some
light in this situation and take
advantage as much as possible of the
spare time that you're gonna be given or
that you're gonna have in the next weeks
and months and that's why what I'm gonna
do here is share with you my top five
programming projects that you can work
on while you're quarantined or while
you're isolated now these projects gonna
be a little bit different than some of
the ones I've mentioned in previous
videos because I'm going to assume that
you're going to have a lot of time to
work on these so I'm gonna suggest some
bigger more impressive projects that are
going to look great on a resume build
your skills and allow you to learn new
tools and technologies so we'll get into
that in just a second just a quick word
from our sponsor I need to thank simply
learn for sponsoring this video and
giving you all a discount on their data
science master's course that's been
co-developed with IBM this course is
comprised of six full courses covering
key technologies like our SAS Python
tableau Hadoop and spark while working
through this course you'll develop 15
real-life projects and master over 30
in-demand skills you will work with
advanced analytics tools such as pandas
use data collection tools like Apache
HBase and learn ETL tools like hive Pig
and scoop by purchasing this course
you'll have lifetime access to all the
course content and lectures receive 1200
USD worth IBM cloud credits and have
access to the IBM cloud platforms like
IBM Watson for 24/7 practice upon
completion will receive certificates
from IBM and simply learn to testify to
your skills as an expert in data science
click the link in the description to get
started so the first type of project
that I like to recommend to everyone is
something that has to do with web
development now this can be simple this
can be complex but what I usually
recommend for at least beginning is to
pick some kind of application that
you've already built and try to recreate
that in a web-based version so maybe you
have like a text-based sorting algorithm
or maybe you have a text-based inventory
system or maybe you even already built a
graphical user interface but it's for a
specific operating system or maybe it's
even an iPhone app or something like
that try to take that and convert that
into a web-based application
now this is gonna mean that you don't
have to write nearly as much code as if
you were doing this project from scratch
and you already have something to kind
of base your project off of so what this
is going to allow you to do is kind of
skip all the grunt work with getting all
this back-end stuff functioning and just
focus on learning how web development
actually works and how you can serve
these kind of applications on the web
now obviously this is going to involve
the use of HTML and CSS although I'm
pretty sure from at least talking to a
lot of different programmers most people
have a basic knowledge of this and if
you don't it's going to be pretty easy
to pick that up
so some frameworks that I like to
recommend at least to get started with
web development if you know anything
about python is flask now flask is a
really simple and great web framework
for doing applications like I just
described something that's a few
different pages it's not crazy complex
maybe you have a database but you don't
need to and it's just really easy to get
set up again it's a Python back-end web
framework then from there all you need
to do is pick what you want to use for
the front-end so with flask it's way
easier just to use custom HTML and CSS
and your own JavaScript but if you don't
want to style the web page yourself you
can always use a framework like
bootstrap now bootstrap is really easy
to use CSS framework essentially it
allows you to use some built-in classes
it allows you to do some animations and
you can make a really good looking
website without having much knowledge of
HTML and CSS and personally what I
always do is I set up my Python back-end
a flask back-end which is really easy to
get set up and then I style the entire
front end using bootstrap and bootstrap
has a really great website that has a
ton of different examples of all of the
classes that they have in the different
usages so it's really easy to create
anything that you want so that's my
project idea number one takes some
application you've already created and
turn it into a web based app obviously
there's so many different ways to do
this let me know if you have any other
frameworks that you think are better for
this but anyone who knows Python I
always recommend flask you want
something a bit more complex you can go
with Django and these are great
frameworks they're fairly easy to learn
and one lets you learn them it's gonna
allow you to do so many different things
so my second project idea is to
implement some popular algorithms now I
know this is quite vague and I'm not
giving you any real examples although I
will later but this is a really great
way to show people that not only do you
know how to program can you create a
project but you can also implement
and you know a bit about algorithms and
data structures and this looks really
good on a resume where you have a
project that's impressive on its own but
also implements a popular algorithm that
shows yes you understand how this
algorithm works and you were good enough
to actually go in and implement that
yourself now this isn't really that
difficult there's tons of explanations
online on how these algorithms work and
I guarantee you'll learn a ton as you
actually go through and try to program
it yourself
so some examples of this or something
like a path finding algorithm so maybe
you make a web interface or maybe you
make some kind of interface where a user
can pick a start point and an end point
and then the algorithm runs and it finds
the shortest path between these two
points that's a great example of
something that I've personally done that
I think looks really good on a resume
another example of implementing a
popular algorithm is something like
stable matching now many people don't
know what stable matching is but let's
say we have a bunch of employers and we
have a bunch of students the employers
rank the students based on who they want
to hire and the students rank the
employer is based on who they want to
work for well given that information how
can we find the best possible match for
all of the employers and for all the
students so that each person gets their
top choice you know within reason right
gets the best possible choice that they
can have this is a really interesting
problem and that's called stable
matching and that's another example of
something that you can implement so pick
kind of any real-world problem anything
you want
pick an algorithm that you want to try
to implement and then try to tie it into
a project and that's a great way to
showcase your skills and to have a
really nice resume project and something
to talk about in potential interviews so
my next project idea is aimed towards
those of you that really like hardware
and a little bit more hands-on what I'm
gonna recommend for you guys is to do
something where you interface with a
microcontroller so obviously you know
little microcontrollers like this you
can program to do all kinds of crazy
things so a project I've actually done
with this is a live security system so
what I actually did was hooked up a
little USB camera to this device and
this is a Nvidia Jetson nano by the way
it's a little bit on the higher end when
it comes to microcontrollers and I ran a
facial detection and recognition script
on this so when you walked near the
camera it would pick up who you are and
it would track and log which person was
in which room at what time now with that
kind of information you can do whatever
you want you can create some kind of
charge so you can create graphs you can
make a website to show that information
but what I mean to say
here is that if you can interface with a
little piece of hardware you can maybe
have some kind of sensor on it you can
do something interesting with it maybe
even just pressing a button then you can
have some really cool software in the
background that takes all the
information that you get from this
microcontroller and does something
really cool with it
and again the examples I usually like to
use or something like you know motion
detection you could do the facial
detection and recognition script and you
don't need to buy something like this
which is called the Jetson Nano it's
actually a Nvidia product which has a
GPU on it that's why it's got that
heatsink in the fan there you get
something like a Raspberry Pi you can
get an Arduino there's all kinds of
cheaper microcontrollers that are only
like 15 or 20 bucks if you can afford
that in times like this there are a lot
of fun and you can do a lot of cool
stuff with them and they actually have
all these pins on the side which are
called GPIO pins and what those allow
you to do is actually control the
voltage that goes to those pins from the
microcontroller so say you want to set
up you know a little circuit to it you
want to create a little more more
intricate kind of program or project I'm
sure some of you know a lot more about
electronics than I do then you can do
that with a board like this and it
really opens up the possibilities for
the kind of projects you can create
especially if you like to see how
they're working and see them kind of
running you know in the actual physical
world as opposed to just on your
computer screen a lot of people make
robots with these things you know the
possibilities are endless
Google best Raspberry Pi projects or
something like that and you'll find an
entire list of amazing things to work on
so my fourth project idea is to
implement a machine learning and
artificial intelligence model into some
kind of project now I'll give you a few
examples near the end of this section
but just hear me out here so if you
don't know much about machine learning
obviously that's gonna be the first step
is learning a bit about machine learning
picking something that you think is
interesting and then picking a project
that you can apply that to now for any
of you that are getting started and you
want to figure out well how can I even
get a machine learning model up and
running I personally have a ton of
different tutorials on how to do that
but a great resource and a website to go
to is actually the tensorflow website so
tensorflow is a very popular machine
learning and AI framework it's usually
used with Python although they do have a
JavaScript framework as well and I
believe they might have one for Java and
some other languages too but what it
does on the website there is it has a
ton of awesome guides and tutorials that
walk you through almost an entire
project that has to deal with machine
so what this is gonna do for you to show
you exactly how to get this model set up
how to train the model how it works but
I will warn you that is a little bit
vague on some of the explanations so
what I usually like to do is I go to the
website I copy down all the code make
sure that this thing is working and then
I go back and I try to understand how
each individual component is working and
look up some things on the side watch
some videos and figure out how this
actually works some examples of some
things that I've done in terms of
integrating are implementing models into
projects is something with the amnesty
cheat data set what I actually did is I
made a PI game interface in Python that
allowed you to draw a digit with the
mouse like 0 is 701 whatever you want to
draw and then it would feed that pixel
data to my machine learning model which
I pretty much had just copied exactly
from the tensorflow website then it
would spit out and tell me what number
it's thought that I drew and this was
actually pretty accurate it worked
pretty well it was my first experience
actually implementing this into a
project and the reason this is great is
because it's some tangible thing that
you can actually use to interface with
your model it makes it a little bit more
interesting than just having this
text-based accuracy score that you see
in so many different tutorials and
guides and it's just a really great
thing to be like yeah not only do I know
how this works
I can implement it and I can integrate
it into some kind of project alright so
the last project that I recommend to
everyone and probably my personal
favorite to work on is recreating an
Atari game now the reason I say Atari is
because these are typically easier kind
of pixel based games that most people
can figure out how to make and there's
so many resources online at least for
the texture packs for them for some of
the graphics and just is really easy to
make like you know a version of Tetris
or snake or these simple kind of games
that still do teach you a lot about
programming and are always fun and
interesting to recreate so that is my
last project idea for you you know if
you're working in Python you can use
something like PI game maybe this is a
good opportunity to explore something
like unity so unity is actually where
you can make 3d games and I know there's
a ton of videos online and tutorials
from Unity themselves on how to do that
maybe you want to explore something like
augmented reality I know you can do that
in unity as well and it's just just a
great opportunity to you know mess
around make some fun games and play them
and share them with your friends or
family or whoever you may be isolated or
quarantined
with so those have been my five
programming projects to work on while
you're quarantined now again guys I know
these times are tough I know a lot of
you're upset I know a lot of things that
are horrible are going around in the
world yes that doesn't mean we can't
take advantage of the spare time that we
have I see far too often that people get
very upset they get very sad they sit on
the couch they want watch Netflix all
day although that's reasonable and it
makes sense to me I think that if we can
take advantage and try to see the
positives in these times we're only
gonna come out better from them and
that's what I encourage you all to do so
anyways that has been this video if you
guys enjoyed make sure you leave a like
subscribe to the channel and as always
leave some other video ideas that you'd
like to see in the comments down below

